import telebot

from telebot import types
from config import bot_token, url_grafana
from mysql import Mysql

bot = telebot.TeleBot(bot_token)

@bot.message_handler(commands=['start'])
def start(message):

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
    markup.add(btn1)
    bot.send_message(message.from_user.id, "üëã –ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –±–æ—Ç-–ø–æ–º–æ—à–Ω–∏–∫!", reply_markup=markup)


@bot.message_handler(content_types=['text'])
def get_text_messages(message):

    if message.text == 'üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True) #—Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
        btn1 = types.KeyboardButton('–°—Å—ã–ª–∫–∞ –Ω–∞ grafana')
        btn2 = types.KeyboardButton('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç –ë–î')
        markup.add(btn1, btn2)
        bot.send_message(message.from_user.id, '‚ùì –ó–∞–¥–∞–π—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å', reply_markup=markup) #–æ—Ç–≤–µ—Ç –±–æ—Ç–∞

    elif message.text == '–°—Å—ã–ª–∫–∞ –Ω–∞ grafana':
        keyboard = types.InlineKeyboardMarkup()
        key_grafana = types.InlineKeyboardButton(text='–°—Å—ã–ª–∫–∞ –Ω–∞ grafana', callback_data='grafana', url=url_grafana) #–∫–Ω–æ–ø–∫–∞ ¬´–î–∞¬ª
        keyboard.add(key_grafana); #–¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        bot.send_message(message.from_user.id, text='üìä –°—Å—ã–ª–∫–∞ –Ω–∞ dashboard grafana:', reply_markup=keyboard)

    elif message.text == '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç –ë–î':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True) #—Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
        btn1 = types.KeyboardButton('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–∫–∞–Ω—Å–∏–π')
        btn2 = types.KeyboardButton('–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –Ω–∞–≤—ã–∫–∏')
        btn3 = types.KeyboardButton('–ù–µ–ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –Ω–∞–≤—ã–∫–∏')
        btn4 = types.KeyboardButton('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –Ω–∞–≤—ã–∫—É')
        markup.add(btn1, btn2, btn3, btn4)
        bot.send_message(message.from_user.id, 'üóÇ –í–≤–µ–¥–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –∑–∞–ø—Ä–æ—Å', reply_markup=markup)

    elif message.text == '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–∫–∞–Ω—Å–∏–π':
        mysql = Mysql()
        result = mysql._get_vacancies_amount()
        bot.send_message(message.from_user.id, f'üìç –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç: {result}')

    elif message.text == '–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –Ω–∞–≤—ã–∫–∏':
        mysql = Mysql()
        popular_skills, result = mysql._get_most_popular_skills(), ''
        bot.send_message(message.from_user.id, 'üìã –í–æ—Ç —Å–ø–∏—Å–æ–∫ —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç:')
        for row in popular_skills:
            result += row 
        bot.send_message(message.from_user.id, result)
    
    elif message.text == '–ù–µ–ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –Ω–∞–≤—ã–∫–∏':
        mysql = Mysql()
        nonpopular_skills, result = mysql._get_less_popular_skills(), ''
        bot.send_message(message.from_user.id, 'üìë –í–æ—Ç —Å–ø–∏—Å–æ–∫ —Å–∞–º—ã—Ö –Ω–µ–ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç:')
        for row in nonpopular_skills:
            result += row 
        bot.send_message(message.from_user.id, result)

    elif message.text == '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –Ω–∞–≤—ã–∫—É':
        bot.send_message(message.from_user.id, 'üîé –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–∫–æ–º –Ω–∞–≤—ã–∫–µ –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –ø–æ–ª—É—á–∏—Ç—å?')

# @bot.callback_query_handler(func=lambda call: True)
# def callback_worker(call):
#     if call.data == 'grafana': 
#         bot.send_message(call.from_user.id, 'Docker-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å grafana –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ ')
    # elif call.data == "no":
    #     bot.send_message(call.message.chat.id, '–≠—Ç–æ –ø–µ—á–∞–ª—å–Ω–æ')


# @bot.message_handler(content_types=['text'])
# def get_text_messages(message):
#     if message.text == "–ü—Ä–∏–≤–µ—Ç":
#         bot.send_message(message.from_user.id, "–ü—Ä–∏–≤–µ—Ç, —á–µ–º —è –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å?")
#     elif message.text == "/help":
#         bot.send_message(message.from_user.id, "–ù–∞–ø–∏—à–∏ –ø—Ä–∏–≤–µ—Ç")
#     else:
#         bot.send_message(message.from_user.id, "–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é. –ù–∞–ø–∏—à–∏ /help.")

# @bot.message_handler(commands=['start'])
# def start(message):

#     markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
#     btn1 = types.KeyboardButton("üá∑üá∫ –†—É—Å—Å–∫–∏–π")
#     btn2 = types.KeyboardButton('üá¨üáß English')
#     markup.add(btn1, btn2)
#     bot.send_message(message.from_user.id, "üá∑üá∫ –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / üá¨üáß Choose your language", reply_markup=markup)
# name = ''
# surname = ''
# age = 0
# @bot.message_handler(content_types=['text'])
# def start(message):
#     if message.text == '/reg':
#         bot.send_message(message.from_user.id, "–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
#         bot.register_next_step_handler(message, get_name); #—Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ ‚Äì —Ñ—É–Ω–∫—Ü–∏—è get_name
#     else:
#         bot.send_message(message.from_user.id, '–ù–∞–ø–∏—à–∏ /reg')

# def get_name(message): #–ø–æ–ª—É—á–∞–µ–º —Ñ–∞–º–∏–ª–∏—é
#     global name
#     name = message.text
#     bot.send_message(message.from_user.id, '–ö–∞–∫–∞—è —É —Ç–µ–±—è —Ñ–∞–º–∏–ª–∏—è?')
#     bot.register_next_step_handler(message, get_surname)

# def get_surname(message):
#     global surname
#     surname = message.text
#     bot.send_message(message.from_user.id, '–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?')
#     bot.register_next_step_handler(message, get_age)

# def get_age(message):
#     global age
#     while age == 0: #–ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤–æ–∑—Ä–∞—Å—Ç –∏–∑–º–µ–Ω–∏–ª—Å—è
#         try:
#              age = int(message.text) #–ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–æ–∑—Ä–∞—Å—Ç –≤–≤–µ–¥–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
#         except Exception:
#              bot.send_message(message.from_user.id, '–¶–∏—Ñ—Ä–∞–º–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞')
#     keyboard = types.InlineKeyboardMarkup(); #–Ω–∞—à–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
#     key_yes = types.InlineKeyboardButton(text='–î–∞', callback_data='yes'); #–∫–Ω–æ–ø–∫–∞ ¬´–î–∞¬ª
#     keyboard.add(key_yes); #–¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
#     key_no= types.InlineKeyboardButton(text='–ù–µ—Ç', callback_data='no')
#     keyboard.add(key_no)
#     question = '–¢–µ–±–µ '+str(age)+' –ª–µ—Ç, —Ç–µ–±—è –∑–æ–≤—É—Ç '+name+' '+surname+'?'
#     bot.send_message(message.from_user.id, text=question, reply_markup=keyboard)

bot.polling(none_stop=True, interval=0)